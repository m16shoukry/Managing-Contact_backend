paths:
  /auth/login:
    post:
      summary: User login
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginDto"
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JWT token
        "400":
          description: Invalid input

  /contacts:
    get:
      summary: List all contacts
      description: "Retrieve a paginated list of contacts with optional filtering by name, phone, or address."
      tags:
        - Contacts
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: Page number for pagination
        - in: query
          name: name
          schema:
            type: string
          description: "Filter contacts by name"
        - in: query
          name: phone
          schema:
            type: string
          description: "Filter contacts by phone"
        - in: query
          name: address
          schema:
            type: string
          description: "Filter contacts by address"
      responses:
        "200":
          description: A paginated list of contacts
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginationResultDto"
        "401":
          description: Unauthorized

    post:
      summary: Create a new contact
      tags:
        - Contacts
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateContactDto"
      responses:
        "201":
          description: Contact created successfully
        "400":
          description: Invalid input
        "401":
          description: Unauthorized

  /contacts/{contactId}:
    put:
      summary: Update a contact
      tags:
        - Contacts
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: contactId
          required: true
          schema:
            type: string
          description: The ID of the contact to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateContactDto"
      responses:
        "200":
          description: Contact updated successfully
        "400":
          description: Invalid input
        "401":
          description: Unauthorized
        "404":
          description: Contact not found

    delete:
      summary: Soft delete a contact
      tags:
        - Contacts
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: contactId
          required: true
          schema:
            type: string
          description: The ID of the contact to delete
      responses:
        "204":
          description: Contact deleted successfully
        "401":
          description: Unauthorized
        "404":
          description: Contact not found

  /contacts/{contactId}/lock:
    post:
      summary: Lock a contact
      tags:
        - Contacts
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: contactId
          required: true
          schema:
            type: string
          description: The ID of the contact to lock
      responses:
        "200":
          description: Contact locked successfully
        "401":
          description: Unauthorized
        "404":
          description: Contact not found

  /contacts/contact-locks:
    get:
      summary: List all contact locks
      tags:
        - Contacts
      responses:
        "200":
          description: A list of contact locks
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    contactId:
                      type: string
                    lockedAt:
                      type: string
                      format: date-time

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    LoginDto:
      type: object
      required:
        - userName
        - password
      properties:
        userName:
          type: string
          description: User's name
          example: user1
        password:
          type: string
          format: password
          description: User's password
          example: user1

    CreateContactDto:
      type: object
      required:
        - name
        - phone
      properties:
        name:
          type: string
          description: Contact's name
        phone:
          type: string
          description: Contact's phone number (Egyptian Mobile Numbers)
        notes:
          type: string
          description: Contact's notes
        address:
          type: string
          description: Contact's address

    UpdateContactDto:
      type: object
      properties:
        name:
          type: string
          description: Contact's name
        phone:
          type: string
          description: Contact's phone number (Egyptian Mobile Numbers)
        notes:
          type: string
          description: Contact's notes
        address:
          type: string
          description: Contact's address

    IContact:
      type: object
      properties:
        id:
          type: string
          description: "Unique identifier for the contact."
        name:
          type: string
        phone:
          type: string
        address:
          type: string
        userId:
          type: string
          description: "User ID who owns the contact."

    PaginationResultDto:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/IContact"
        totalItems:
          type: integer
        page:
          type: integer
        limit:
          type: integer
